name: Build & Release Docker image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-publish:
    # Use larger runner for faster builds
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_NAME: c0305/enkiflow
      IMAGE_TAG: ${{ github.event.pull_request.number && format('pr-{0}', github.event.pull_request.number) || 'latest' }}
      COMPOSER_CACHE_DIR: ~/.composer/cache
      NODE_CACHE_DIR: ~/.npm
      # Use Docker's build resource controls
      DOCKER_BUILD_ARGS: --memory=6g --cpu-quota=150000
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Cache Composer dependencies
      - name: Cache Composer packages
        uses: actions/cache@v3
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-

      # Cache NPM dependencies
      - name: Cache NPM packages
        uses: actions/cache@v3
        with:
          path: ${{ env.NODE_CACHE_DIR }}
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: npm-

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
        with:
          # Use latest version for enhanced performance
          version: latest
          # Increase the number of concurrent jobs
          driver-opts: |
            image=moby/buildkit:latest
            network=host

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      # Build for amd64 only to test - once confirmed working, add arm64 back
      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          platforms: linux/amd64
          # Add efficient BuildX caching
          cache-from: type=gha
          cache-to: type=gha,mode=max
          # Optimize build arguments
          build-args: |
            BUILDKIT_INLINE_CACHE=1
          # Set build metadata
          provenance: false
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.repository.updated_at }}

      - name: Verify Laravel Installation
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
        run: |
          docker run --rm -e APP_ENV=testing \
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} \
            php artisan --version

      - name: Create GitHub Release
        if: github.event_name == 'push'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: release-${{ github.sha }}
          name: release-${{ github.sha }}
          body: |
            Docker image tag: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          files: docs/docker.md

